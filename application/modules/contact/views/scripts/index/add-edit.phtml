<?php $form = $this->form;?>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/jqxcore.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/gettheme.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/jqxdropdownbutton.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/jqxscrollbar.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/jqxbuttons.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/jqxtree.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/jqwidget/js/jqxpanel.js"); ?>"></script>

<script type="text/javascript" src="<?php echo $this->baseUrl("libs/innovaeditor/scripts/innovaeditor.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/innovaeditor/scripts/jquery.innovaeditor.js"); ?>"></script>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/innovaeditor/scripts/editor.aksPlugin.js"); ?>"></script>


<script type="text/javascript" src="<?php echo $this->baseUrl("libs/onlytimepicker/onlytimepicker.js"); ?>"></script>
<link rel="StyleSheet"
	href="<?php echo $this->baseUrl("libs/tagit/css/jquery.tagedit.css"); ?>"
	type="text/css" media="all" />
<script type="text/javascript"
	src="<?php echo $this->baseUrl("libs/tagit/js/jquery.autoGrowInput.js"); ?>"></script>
<script type="text/javascript"
	src="<?php echo $this->baseUrl("libs/tagit/js/jquery.tagedit.js"); ?>"></script>
<style>
.timings-label {
	display: inline;
	display: inline-block;
	width: 76px;
	padding: 5px;
}

.timings-input {
	display: inline;
	display: inline-block;
	padding: 5px;
}

.timings-submit {
	display: inline;
	display: inline-block;
	padding-left: 110px;
	padding-top: 10px;
}

.submit-timings-box {
	border: solid 1px #dcdde2;
	background-color: #f2f4f8;
	-webkit-border-radius: 6px;
	-moz-border-radius: 6px;
	border-radius: 6px;
	margin-bottom: 10px;
	padding: 8px;
}

#gMap {
	margin: auto;
	border: 1px solid #DCDDE2;
	width: 100%;
	height: 400px;
}
div.logo-box td {
	width: auto;
}
.tagedit-list{
	width:160px !important;
	border:1px solid #CACED2;
	border-radius:3px 3px 3px 3px;
	color:#797979;
	font:12px Arial,Helvetica;
	background-color: #FFFFFF;
	box-shadow:0 2px 4px #DCDDE2 inset;
	min-height: 20px !important;
	margin:0 2px;
}
.deletebuttons{
	width:20px !important;
	padding-left:8px;
}
</style>
<div id="filterBox">
	<table
		style="width: 100%; border: 0; border-spacing: 0; border-collapse: collapse;">
		<tr>
			<td valign="middle"><?php echo $this->partial($this->partial,array()); ?></td>
			<td align="right"><h2><?php echo $this->language; ?></h2></td>
		</tr>
	</table>
</div>
<div class="boxBorderBottom">
	<form id="frmAddEditContact" method="<?php echo $form->getMethod();?>"
		action="<?php echo $form->getAction();?>" class="zend_form">
		<?php echo $form->contact_id->renderViewHelper(); ?>
		<?php echo $form->contact_detail_id->renderViewHelper(); ?>
		<?php echo $form->contact_category_id->renderViewHelper(); ?>
		<?php echo $form->language_id->renderViewHelper(); ?>
	<table width="100%">
		<tr>
			<td valign="top">
				<table width="100%">
					<tr>
						<td>
							<?php echo $form->location->renderLabel() ?>
						</td>
						<td>
							<?php echo $form->location->renderViewHelper()?>
						</td>
						<td valign="top" rowspan="4" style="padding-top: 10px;">
							<?php echo $form->information->renderLabel(); ?>
						</td>
						<td rowspan="4" width="465" valign="top">
							<?php echo $form->information->renderViewHelper(); ?>
						</td>
					</tr>
					<tr>
						<td valign="top">
							<?php echo $form->address->renderLabel() ?>
						</td>
						<td>
							<?php echo $form->address->renderViewHelper()?>
						</td>
					</tr>
					<tr>
						<td><?php echo $form->city->renderLabel(); ?></td>
						<td><?php echo $form->city->renderViewHelper(); ?></td>
					</tr>
					<tr>
						<td><?php echo $form->plz->renderLabel(); ?></td>
						<td><?php echo $form->plz->renderViewHelper(); ?></td>
					</tr>
					<tr>
						<td><?php echo $form->country->renderLabel() ?></td>
						<td class="countryHelper"><?php echo $form->country->renderViewHelper() ?></td>
						<td><?php echo $form->website->renderLabel() ?></td>
						<td><?php echo $form->website->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $form->phone_1->renderLabel() ?></td>
						<td>
							<?php echo $form->phone_1->renderViewHelper()?>
						</td>
						<td valign="top" style="padding-top: 10px;">
							<?php echo $this->translate('Office Timings')?>
						</td>
						<td rowspan="5" valign="top">
							<div class="logo-box" style="width:450px; min-height: 170px; padding: 5px 15px;">
							<table class="timings">
								<thead>
									<tr>
										<th width="50px"><?php echo $this->translate("Order"); ?></th>
										<th width="120px"><?php echo $this->translate("Day");?></th>
										<th width="80px"><?php echo $this->translate("Open From")?></th>
										<th width="80px"><?php echo $this->translate("Open To")?></th>
										<th width="120px" colspan="2"><?php echo $this->translate("Actions")?></th>
									</tr>
								</thead>
								<tbody>
								<?php
								if($this->timings){
									$timings = $this->timings;
									//creating object from timings data from database
									$xml = simplexml_load_string($timings);
									//adding the record in object to make sure edited data stays in object								
								    
									echo "<script type='text/javascript'>
											window.createdXML =  [];	
											window.createdXMLNew =  ".json_encode($xml).";	
											if(window.createdXMLNew.record!=undefined){
												if(window.createdXMLNew.record.length!=undefined){
													for(x in window.createdXMLNew.record){
														if(typeof window.createdXMLNew.record[x]=='object'){
															window.createdXML.push(window.createdXMLNew.record[x]);
														}
													}
												}else{
													window.createdXML.push(window.createdXMLNew.record);
												}
											}										
										</script>";
									
								} 
								$i = 1;
								//NOTE: class for TR starts from 1
								//		class edit delete a tags start from 0
								if(isset($xml) && is_object($xml)){
									foreach ($xml as $key=>$record){
										echo "<tr class=row{$i}>
												<td class='order' style='text-align:center'>{$record->order}</td>
												<td class='day' style='text-align:center'>{$record->day}</td>
												<td class='from' style='text-align:center'>{$record->from}</td>
												<td class='to' style='text-align:center'>{$record->to}</td>
												<td><a class='edit-timings-{$i}'>Edit</a></td>
												<td><a class='delete-timings-{$i}'>Delete</a></td>
											</tr>";
										$i++;
									}
								}
								?>
								</tbody>
							</table>
							<div style="margin-top: 10px;"><a class="open-office-timings greay button-grid"><?php echo $this->translate("Add")?></a></div>
							</div>
						</td>
					</tr>
					<tr>
						<td><?php echo $form->phone_2->renderLabel() ?></td>
						<td>
							<?php echo $form->phone_2->renderViewHelper()?>
						</td>
					</tr>
					<tr>
						<td><?php echo $form->phone_3->renderLabel() ?></td>
						<td>
							<?php echo $form->phone_3->renderViewHelper()?>
						</td>
					</tr>
					<tr>
						<td>
							<?php echo $form->email_1->renderLabel() ?>
						</td>
						<td>
							<?php echo $form->email_1->renderViewHelper()?>
						</td>
					</tr>
					<tr>
						<td>
							<?php echo $form->email_2->renderLabel() ?>
						</td>
						<td>
							<?php echo $form->email_2->renderViewHelper()?>
						</td>
					</tr>
					<tr>
						<td>
							<?php echo $form->email_3->renderLabel() ?>
						</td>
						<td>
							<?php echo $form->email_3->renderViewHelper()?>
						</td>
						<td><label for="logo"><?php echo $this->translate('Logo:')?></label></td>
						<td>
							<div class="logo-box" style="width:450px; padding: 5px 15px;">
								<table>
								    <tr>
								        <td>
								            <?php if($this->edit && $this->logo_display != ""){ ?>
									            <img class="logoImage" alt="" width="64" height="64" src="<?php echo $this->logo_display ?>">
								            <?php } ?>
								        </td>
								        <td>
								            <input id="logo" type="file" name="logo" size="16" /> <input id="logo_path" type="hidden" name="logo_path" value="" />
								            (Size: 640px &#215; 250px )
								        </td>
								    </tr>
								    <?php if($this->edit && $this->logo_display != ""){ ?>
								    <tr id="deleteButtonLogo">
    								    <td>
            								<div class="deletebuttons"><a class="deleteLogo custombutton red button-grid">Delete</a></div>
    								    </td>
								    </tr>
								    <?php } ?>
								</table>
							</div>
						</td>
					</tr>
					<tr>
						<td><?php echo $form->fax->renderLabel() ?></td>
						<td><?php echo $form->fax->renderViewHelper()?></td>
						<td>
        					<label><?php echo $this->translate('Icon:')?></label>
        				</td>
        				<td valign="top" rowspan = "3">
        					<div id="lstLogo" class="logo-box" style="width:470px !important;">
                				<?php $resource_path = $this->baseUrl("resource/contact/preset-icons");?>
                				<?php foreach ($this->iconpack as $icon):?>
                				<div class="" style="width:77px !important;">
        							<label for="selLogo_<?php echo $icon; ?>">
        								<img src="<?php echo $resource_path . "/" . $icon; ?>" width="64" />
        							</label>
        							<input type="radio" id="selLogo_<?php echo $icon; ?>" name="selLogo" value="<?php echo $icon; ?>" />
        						</div>
                				<?php endforeach;?>
        					</div>
        				</td>
					</tr>
					<tr>
        				<td><label for="tree"><?php echo $this->translate('Select Category:'); ?></label></td>
        				<td>
        					<div id='jqxWidget'>
        						<div id="dropDownButton">
        							<div id='jqxTree'></div>
        						</div>
        					</div>
        				</td>
        			</tr>
					<tr>
		    	        <td><?php echo $form->contact_types_id->renderLabel() ?></td>
		                <td>
		        	        <?php echo $form->contact_types_id->renderViewHelper()?>
				        </td>
			        </tr>
					<tr>
					    <td><label>Keywords:</label></td>
    					<td>
    						<?php
    						if (is_array ( $this->keywords )) {
    							foreach ( $this->keywords as $keyword ) {
    								?>
    									<input type="text" name="arrtag[]"
    							value="<?php echo $keyword;?>" class="tag" id="keywords" />
    								<?php
    							}
    						} else {
    							?>
    							<input type="text" name="arrtag[]" value=""
    							class="tag" id="keywords" />
    						<?php
    						}
    						?>
    					</td>
						<td rowspan="4">&nbsp;</td>
						<td rowspan="4">
        		        	<div class="logo-box" style="width:450px !important;padding: 5px 15px;">
        		        		<table>
        						<tr>
        							<td>
        								<?php 
        								$icon_path = $this->baseUrl("resource/contact/");
        					        	if($this->icon_src!="") {
        					        	?>
        					        	<img class="iconImage" alt="" src="<?php echo $icon_path."/".$this->icon_src;?>" style="width: 64px;height: 64px;" />
        					        	<?php 
        					        	}
        					        	?>
        				        	</td>
        				        	<td>
        				        		<?php
        				        		$checked = "";
        					        	if($this->icon_src!="") {
        					        		$checked = "checked='checked'";
        								}
        								?>
        					        	
        								<input type="radio" id="selLogo_0" checked="checked" name="selLogo" value="0" style="margin-left: 10px;" />
        								<label for="selLogo_0"><?php echo $this->translate('Upload:')?></label>
        								<input id="icon" type="file" name="icon" size="16" /> (Size: 60px &#215; 60px )
        					        	<input id="icon_path" type="hidden" name="icon_path" value="" />
        				        	</td>
        			        	</tr>
        			        	<tr id="deleteIconButton">
        			        	 <?php if($this->icon_src!=""){ ?>
								    <td>
        							    <div class="deletebuttons"><a class="deleteIcon red button-grid">Delete</a></div>
								    </td>
							    </tr>
							    <?php } ?>
        			        	</table>
        					</div>
        				</td>
    			    </tr>
    			    <tr>
    			        <td><?php echo $form->status->renderLabel() ?></td>
						<td><?php echo $form->status->renderViewHelper()?></td>
    			    </tr>
				</table>
			</td>
		</tr>
		<tr>
			<td valign="top">
				<div class="logo-box" style="width:98%; padding: 0 1%;">
				<table width="100%">
						<tr>
							<td>
								<?php echo $form->latitude->renderLabel() ?>
								<?php echo $form->latitude->renderViewHelper()?>
							</td>
							<td>
								<?php echo $form->longitude->renderLabel() ?>
								<?php echo $form->longitude->renderViewHelper()?>
							</td>
							<td><input type="checkbox" checked="checked" name="mark-fixed"
									id="mark-fixed" /> <label for="mark-fixed"><?php echo $this->translate('Auto Locate')?> </label>
							</td>
						</tr>
						<tr>
							<td rowspan="3" colspan="4"><div id="gMap"></div></td>
						</tr>
				</table>
				</div>
			</td>
		</tr>
		<tr>
			<td align="center">
	        <?php echo html_entity_decode($form->submit->renderViewHelper()) ?>&nbsp;
	        <?php echo (Standard_Functions::$action == "edit")? html_entity_decode($form->applyall->renderViewHelper()):""?>&nbsp;
			<?php echo html_entity_decode($form->reset->renderViewHelper())?>
			</td>
		</tr>
	</table>
	</form>
</div>
<!-- timing form popup --> 
<div id="office-time" style="display: none;">
	<div class="timings-label">
		<label><?php echo $this->translate("Order")?></label>
	</div>
	<div class="timings-input">
		<input name="order" class="reqCheck" type="text" />
	</div>
	<div class="timings-label">
		<label><?php echo $this->translate("Day")?></label>
	</div>
	<div class="timings-input">
		<input name="day" class="reqCheck" type="text" />
	</div>
	<div class="timings-label">
		<label><?php echo $this->translate("From")?></label>
	</div>
	<div class="timings-input">
		<input name="from" class="reqCheck timingplugin" type="text" />
	</div>
	<div class="timings-label">
		<label><?php echo $this->translate("To")?></label>
	</div>
	<div class="timings-input">
		<input name="to" class="reqCheck timingplugin" type="text" />
	</div>
	<div class="timings-submit">
		<input type="button" class="submit-timings" name="submitData"
			value="<?php echo $this->translate("submit")?>">
	</div>
</div>

<script type="text/javascript">
$(document).ready(function() {
	$('#information').editor({
		width:650,
        height: 600,
        innerWidth:320,
        css: ['<?php echo $this->baseUrl("libs/innovaeditor/styles/default.css");?>'] ,
        groups: [
                ["group1", "", ["Bold", "Italic", "Underline", "Strikethrough", "TextDialog", "RemoveFormat"]],
		        ["group2", "", ["Undo", "Redo", "SearchDialog", "CharsDialog", "FullScreen"]]
                ]
    });
	var parentIdLabel = "<?php echo $this->parentCategory; ?>";
	var data = <?php echo $this->categoryTree; ?>;
	var builddata = function () {
		var source = [];
	    var items = [];
	    items[0]={id:0,label:'Root',selected:false};
		source[0] = items[0];
	    for (var i = 0; i < data.length; i++) {
	        var item = data[i];
	        var label = item["text"];
	        var parentid = item["parentId"];
	        var id = item["id"];

	        if (items[parentid]) {
	            var item = { id: id, label: label, item: item };
	            if (!items[parentid].items) {
	                items[parentid].items = [];
	            }
	            items[parentid].items[items[parentid].items.length] = item;
	            items[id] = item;
	        }
	        else {
	            items[id] = { id: id, label: label, item: item };
	            source[id] = items[id];
	        }
	    }
	    return source;
	};
	$("#dropDownButton").jqxDropDownButton({ width: 170, height: 25 });
	$('#jqxTree').bind('initialized', function (event) { 
		var args = event.args;
		parentIdLabel = (parentIdLabel=="")?"Menu":parentIdLabel;
    	var dropDownContent = '<div style="position: relative; margin-left: 3px; margin-top: 5px;">' + parentIdLabel + '</div>';
    	$("#dropDownButton").jqxDropDownButton('setContent', dropDownContent);
    });	
	$('#jqxTree').bind('select', function (event) {
        var args = event.args;
        var item = $('#jqxTree').jqxTree('getItem', args.element);
        $("#contact_category_id").attr("value",item.id);
        var dropDownContent = '<div style="position: relative; margin-left: 3px; margin-top: 5px;">' + item.label + '</div>';
        $("#dropDownButton").jqxDropDownButton('setContent', dropDownContent);
    });
	$('#jqxTree').bind('click', function (event) {
		$("#dropDownButton").jqxDropDownButton("close");
	});
    var source = builddata();
    $("#jqxTree").jqxTree({source:source,width: 250 });
    $('#jqxTree').jqxTree('expandAll');
	var queryAppend = "";
	$("input:radio[name=selLogo]").on("change",function(){
		if($('input:radio[name=selLogo]:checked').val() == 0)
		{
			$("#icon").removeAttr("disabled");
		} else {
			$("#icon").attr("disabled","disabled");
		}			
	});
	$(".deleteLogo").on("click",function(){
    	$("#logo_path").attr("value","deleted");
    	$(".logoImage").remove();
    	$("#logo").attr("value","");
    	$("tr#deleteButtonLogo").remove();
    });
	$(".deleteIcon").on("click",function(){
    	$("#icon_path").attr("value","deleted");
    	$(".iconImage").remove();
    	$("#icon").attr("value","");
    	$("tr#deleteIconButton").remove();
    });
	$('.timingplugin').timeEntry({show24Hours: true});
	// Clearing the values on Add Timings
	$('.open-office-timings').on("click",function(){
		$('.reqCheck').each(function(){
			$(this).val("");
		});
		$("#office-time").dialog({
    		modal: true,
    		width: 330,
    		resizable: false,
    		title: "<?php echo $this->translate("Add New Entry")?>",
    		dialogClass: "Add"
    	});
		$('input[name=to]').val("17:00");
		$('input[name=from]').val("08:00");
	});
	$('.timings-submit').on("click",function(){
		window.createdXML = window.createdXML? window.createdXML: [];
		var totalRows = window.createdXML.length + 1;
		var dialog = $(this).closest('.ui-dialog');
		var self = this;
        
  		var valid =  true;
  		//validation check: Nothing should be empty
		$('.reqCheck').each(function(){
			if($(this).attr("value").length == 0){
				valid = false;		
			}
		});
		if(valid == true){
			//Edit Mode
			if($(dialog).hasClass("Edit")){
				//Getting the class where Editing needs to be done
				var createdTr = window.currentRow;
				//Getting the record number in created object
				var currentRow = parseInt($(createdTr).attr("class").replace("row",''),10)-1;
				$(createdTr).find('.order').html($('input[name=order]').attr("value"));
				$(createdTr).find('.day').html($('input[name=day]').attr("value"));
				$(createdTr).find('.from').html($('input[name=from]').attr("value"));
				$(createdTr).find('.to').html($('input[name=to]').attr("value"));
				window.currentRow = undefined;
				window.createdXML[currentRow] = {
						'order': $('input[name=order]').attr("value"),
						'day': $('input[name=day]').attr("value"),
						'from':$('input[name=from]').attr("value"),
						'to' : $('input[name=to]').attr("value")
				};
				
			} else {
				//Add Mode
				var createdTr = "<tr class=row" + (totalRows) + ">" +
				"<td class='order' style='text-align:center'>" + $('input[name=order]').attr("value")  +"</td>" +
				"<td class='day' style='text-align:center'>" + $('input[name=day]').attr("value") +"</td>" +
				"<td class='from' style='text-align:center'>" + $('input[name=from]').attr("value") +"</td>" +
				"<td class='to' style='text-align:center'>" + $('input[name=to]').attr("value") +"</td>" +
				"<td>" + "<a class=edit-timings-" + totalRows +" timinglink>Edit"+"</a>" +"</td>" +
				"<td>" + "<a class=delete-timings-" + totalRows +" timinglink>Delete"+"</a>" +"</td>" +
				"</tr>";
				//recordId = "record"+totalRows; 
				recordObject = {
						'order': $('input[name=order]').attr("value"),
						'day': $('input[name=day]').attr("value"),
						'from':$('input[name=from]').attr("value"),
						'to' : $('input[name=to]').attr("value")
				};
				window.createdXML.push(recordObject);
				
				$('.timings tbody').append(createdTr);
			}
			$('#office-time').dialog("close");
		}else{
			promptus = new prompt({
	           	reference : self,
	            element : "#office-time",
	            beforeShow : function(){
	                this.alternateMessage = this.showErrorMessage("Incomplete Data!");
                } 
			});
			setTimeout(function(){
	  	        promptus.close();
	  		}, 1000);
		}
	});
	//Editing The record from Timings Grid
	$('a[class^=edit-timings-]').live("click",function(){
		$("#office-time").dialog({
    		modal: true,
    		width: 330,
    		resizable: false,
    		title: "Edit Entry:",
        	dialogClass: "Edit"
    	});
    	//Getting the parent class of record
    	var tr = $("."+$(this).attr("class")).closest("tr");
		var order = tr.find("td[class='order']").html();
		var day = tr.find("td[class='day']").html();
		var from = tr.find("td[class='from']").html();
		var to = tr.find("td[class='to']").html();
		$('input[name=order]').attr("value",order);
		$('input[name=day]').attr("value",day);
		$('input[name=from]').attr("value",from);
		$('input[name=to]').attr("value",to);
		//Sending the parent class information to onsubmit function 
		window.currentRow = tr;
	});
	$('a[class^=delete-timings-]').live("click",function(){
		var deletedRow = parseInt($(this).attr("class").replace("delete-timings-",''))-1;
		delete window.createdXML[deletedRow];
		$("."+$(this).attr("class")).closest("tr").remove();
	});
	/*var items = [];
	$('.timings > tr').each(function(){
	    items.push($(this).find("td").val());
	});
	console.log(items);*/
	$("#applyall").on("click",function(e){
		if(!e.isDefaultPrevented()){
	    	var promptus = new prompt({
	            	reference :"#frmAddEditContact",
	                element : "#content",
	                message : "<?php echo $this->translate('Your changes will be saved and applied to all languages. Is it Ok?'); ?>",
	                buttons : {
	                    "Yes" : function(self){
		                    this.close();
		                    queryAppend = "&all=true";
	                        $("#submit").trigger("click");
	                    },
	                    "No"  : function(self){
	                    	this.close();
	                    },
	                }
	            });
	        e.preventDefault();
	    }
	});
	$("#frmAddEditContact").validator().submit(function(e){
		var XML = "<node>";
		$(window.createdXML).each(function(key,value){
			if(value != undefined){
				XML += "<record>";
				XML += "<order>"+value.order+"</order>";
				XML += "<day>"+value.day+"</day>";
				XML += "<from>"+value.from+"</from>";
				XML += "<to>"+value.to+"</to>";
				XML += "</record>";
			}
		});
		XML += "</node>";
		var form = $(this);
		if(!e.isDefaultPrevented()){
			if($('#contact_category_id').val() == 0){
				promptus = new prompt({
		           	reference : self,
		            element : "#content",
		            beforeShow : function(){
		                this.alternateMessage = this.showErrorMessage("Please select some Category!");
	                } 
				});
				setTimeout(function(){
					promptus.close();
				}, 2000);
				return false;
			}
			var promptus = false;
			$(document).queue(function(next){
				promptus = new prompt({
	            	reference : form,
	                element : "#content",
	                beforeShow : function(){
		                this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Contact...')?>");
	                }
	            });
	            next();
			}).queue(function(next){
				if($('input:radio[name=selLogo]:checked').val() == 0 && $('#icon').attr("value")!="") {
					$.ajaxFileUpload({
						url:'<?php echo $form->getAction(); ?>',
						secureuri:false,
						fileElementId:'icon',
						dataType: 'json',
						data:{iconupload:'true'},
						success: function (data, status)
						{
							if(data.success != undefined) {
								$("#icon_path").attr("value",data.success);
								next();
							}
						},
						error: function (data, status, e)
						{
							promptus.showErrorMessage("<?php echo $this->translate('Error uploading icon.')?>");
							setTimeout(function(){
								promptus.close();
							}, 2000);
							
						}
					});
				} else {
					next();
				}
			}).queue(function(next){
				if($('#logo').attr("value")!="") {
					$.ajaxFileUpload({
						url:'<?php echo $form->getAction(); ?>',
						secureuri:false,
						fileElementId:'logo',
						dataType: 'json',
						data:{upload:'true'},
						success: function (data, status)
						{
							if(data.success != undefined) {
								$("#logo_path").attr("value",data.success);
								next();
							}
						},
						error: function (data, status, e)
						{
							promptus.showErrorMessage("<?php echo $this->translate('Error uploading logo.')?>");
							setTimeout(function(){
								promptus.close();
							}, 2000);
							
						}
					});
				} else {
					next();
				}
			}).queue(function(next){
			    $.ajax({
					type : "POST",
					cache : false,
					data : form.serialize()+'&xml='+XML+queryAppend,
					url : "<?php echo $form->getAction(); ?>",
					success : function(json){
						if(json["errors"] != undefined){
							form.data("validator").invalidate(json["errors"]);
							next();
						} else if(json["success"] != undefined){
							promptus.showSuccessMessage("<?php echo $this->translate('Contact saved successfully.')?>");
							setTimeout(function(){
								location.href = "<?php echo $this->url(array("module"=>"contact","controller"=>"index","action" => "index"),"default",true);?>";
							}, 2000);
						}
					},
					error : next
	  			});
			}).queue(function(next){
				promptus.close();
				next();
	  		});
			e.preventDefault();
		}
	});

	// Initialize Google Map
	$('#gMap').gmap3({
    	action: 'init',
        options:{
        	center:[0, 0],
        	mapTypeId: google.maps.MapTypeId.SATELLITE,
        	zoom: 2,
        	scrollwheel: false
        },
        callback: function(){
            
        }
    });
    // Set current geo-loaction on Map
    if($("#latitude").attr("value")=="" && $("#longitude").attr("value")=="")
    {
    	var url = "http://www.geoplugin.net/json.gp?jsoncallback=?";

    	$(document).queue(function(next){

    		if(navigator.geolocation) {
        		var locationMarker = null;
        		navigator.geolocation.getCurrentPosition(function(position) {
            		if(locationMarker) {
    					return;
            		}
            		$('#gMap').gmap3('setDefault', {init:{center:[ position.coords.latitude,position.coords.longitude ]}});
               		$("#latitude").attr("value",position.coords.latitude);
           			$("#longitude").attr("value",position.coords.longitude);

           			next();
        		}, function() {
        			
        		});
        	} 
        	
        	if($("#latitude").attr("value")=="" && $("#longitude").attr("value")=="") {    		
        		$.getJSON(url, function(data){
                	if(data['geoplugin_status'] == 200){
            	        // Do something with the data
            	    	$('#gMap').gmap3('setDefault', {init:{center:[ data["geoplugin_latitude"],data["geoplugin_longitude"] ]}});
        				//$('#gMap').gmap3({action: 'setCenter', args:[ data["geoplugin_latitude"],data["geoplugin_longitude"] ]});
                   		$("#latitude").attr("value",data["geoplugin_latitude"]);
               			$("#longitude").attr("value",data["geoplugin_longitude"]);
            	    }
            	    else
            	    {
            	    	$('#gMap').gmap3('setDefault', {init:{center:[ 0,0 ]}});
                   		$("#latitude").attr("value",0);
               			$("#longitude").attr("value",0);
            	    }
            	}).complete(next);
        	}
    	}).queue(function(next){
    		// Set Marker to the current geo-location
           	$('#gMap').gmap3({ 
                action: 'addMarker',
                latLng:[$("#latitude").attr("value"),$("#longitude").attr("value")],
    			options:{
                	draggable: true,
                    animation: google.maps.Animation.DROP
                },
                events:{
                	drag: function(marker, event, data) {
                		var pos = marker.getPosition();
                    	$("#latitude").attr("value",pos.lat());
                    	$("#longitude").attr("value",pos.lng());
                	}
                }
            });
			next();
    	});    	
    } else {
    	// Set Marker to the current geo-location
    	//$("#mark-fixed").removeAttr("checked");
       	$('#gMap').gmap3({ 
            action: 'addMarker',
            latLng:[$("#latitude").attr("value"),$("#longitude").attr("value")],
			options:{
                animation: google.maps.Animation.DROP,
                draggable:true
            },
            events:{
            	drag: function(marker, event, data) {
            		var pos = marker.getPosition();
                	$("#latitude").attr("value",pos.lat());
                	$("#longitude").attr("value",pos.lng());
            	}
            }
        });
       	$('#gMap').gmap3({
		    action:"panTo",
		    args: [new google.maps.LatLng($("#latitude").attr("value"),$("#longitude").attr("value"))]
        });
		var map = $('#gMap').gmap3("get");
		map.setZoom(14);
    }
    // Callback to auto set marker based on address
    $("#address, #city, #plz, #country").on("blur",function(){
    	if($("#mark-fixed").attr("checked")!="checked") return;
    	$('#gMap').gmap3({
    		action:'getAddress',
    		address:($("#address").attr("value")+ " " + $("#plz").attr("value")+ " " + $("#city").attr("value")+ " " + $("#country").attr("value")),
    		callback:function(results){
    			if (!results) return;
    			var item = results[0];
    			/*$("#gMap").gmap3({action:'clear', name:'marker'});*/
    			$("#gMap").gmap3({action:'clear', name:'marker'},{
        				action:'addMarker',
    					latLng:item.geometry.location,
    					options:{
  				        	draggable: true,
  				        	animation: google.maps.Animation.DROP
  				        },
  				        events:{
  				        	drag: function(marker, event, data) {
  				        		var pos = marker.getPosition();
  				            	$("#latitude").attr("value",pos.lat());
  				            	$("#longitude").attr("value",pos.lng());
  				        	}
  				        }
    				});
			var pos = item.geometry.location;
			$("#latitude").attr("value",pos.lat());
        	$("#longitude").attr("value",pos.lng());
            	
   			$('#gMap').gmap3({
   			    action:"panTo",
   			    args: [new google.maps.LatLng($("#latitude").attr("value"),$("#longitude").attr("value"))]
    		});
   			var map = $('#gMap').gmap3("get");
   			map.setZoom(14);
    		}
    	});
	});
	
    // Callback to auto set marker based on latitude and longitude
    $("#latitude,#longitude").on("blur",function(){
    	if($("#mark-fixed").attr("checked")!="checked") return;
        $("#gMap").gmap3(
			{action:'clear', name:'marker'},
			{
    			action:'addMarker',
				latLng:[$("#latitude").attr("value"),$("#longitude").attr("value")],
				options:{
					draggable: true,
					animation: google.maps.Animation.DROP
				},
				events:{
					drag: function(marker, event, data) {
				    	var pos = marker.getPosition();
				        $("#latitude").attr("value",pos.lat());
				        $("#longitude").attr("value",pos.lng());
					}
				}
			}
		);
		
        $('#gMap').gmap3({
		    action:"panTo",
		    args: [new google.maps.LatLng($("#latitude").attr("value"),$("#longitude").attr("value"))]
        });
		var map = $('#gMap').gmap3("get");
		map.setZoom(14);
	});
    $(".timings input[type=checkbox]").trigger("change");
    function initTag(){
    	$(function() {
    		$( "#frmAddEditContact" ).find('input.tag').tagedit({
    		});
    	});
    }
    initTag();
});
//  function which disables open-close text boxes on checkbox:checked 
//	and opens a comment box and vice versa
$(document).on('change',".timings input[type=checkbox]",function(){
	var id = $(this).attr("id");
	if($(this).is(":checked")){
	    $("#open"+id).attr("disabled","disabled");
	    $("#close"+id).attr("disabled","disabled");
	    $("#comment"+id).show();
	    $('.dynamichead').show();
	} else {
		$('#open'+id).removeAttr('disabled');
        $('#close'+id).removeAttr('disabled');
        $('#comment'+id).hide();
        if($(".timings input[type='checkbox']:checked").length == 0) {
            $(".dynamichead").hide();
        }
	}
});
$("#country option[value='Austria'] ").css("border-bottom","1px dashed");
$("#country option[value='Select Country'] ").css("border-bottom","1px dashed");

// -->
</script>