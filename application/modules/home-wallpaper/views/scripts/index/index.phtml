<script>
window.imagesUploaded = <?php echo $this->imagesUploaded?$this->imagesUploaded:0;?>;
window.imagesLimit = <?php echo $this->imagesLimit?$this->imagesLimit:0;?>;
</script>
<form id="frmFilter">
<div id="filterBox">
      <table style="width:100%;border:0;border-spacing:0;border-collapse:collapse;">
        <tr>
          <td valign="middle"><h2 class="filterIcon"><?php echo $this->translate('Filter'); ?></h2></td>
          <td>
          	<table>
              <tr>
                <td><?php echo $this->translate('Image Name'); ?></td>
                <td><input type="text" class="input" id="txtTemplate" name="hd[image_title]"></td>
                <td><?php echo $this->translate('Status'); ?></td>
                 <td>
                	<select name="status">
                		<option value="1"><?php echo $this->translate('Active'); ?></option>
                		<option value="0"><?php echo $this->translate('InActive'); ?></option>
                	</select>
               	</td>
              </tr>
            </table>
          </td>
          <td>&nbsp;</td>
          <td align="right">
          	<input type="submit" name="button" id="button" class="button" value="<?php echo $this->translate('Submit'); ?>">
          </td>
        </tr>
      </table>
</div>
</form>
<a class="togglefilter"></a>
<table style="border-spacing:0;border-collapse:collapse;width:100%" class="pattern-style-b" id="dataGrid">
	<thead>
		<tr>
	        <th scope="col"><?php echo $this->translate('Image Thumbnail view'); ?></th>
		    <th scope="col"><?php echo $this->translate('Image Name'); ?></th>
		    <th scope="col"><?php echo $this->translate('Usage'); ?></th>
		    <th scope="col"><?php echo $this->translate('Status'); ?></th>
		    <th scope="col"><?php echo $this->translate('Order'); ?></th>
		    <th scope="col" class="action"><?php echo $this->translate('Action'); ?></th>
		</tr>
    </thead> 
	<tbody>
		<tr>
			<td colspan="3" class="dataTables_empty"><?php echo $this->translate('Loading data from server'); ?></td>
		</tr>
	</tbody>      
</table>

<script type="text/javascript">
var grid ="";
$(document).ready(function() {
	$('a[href="<?php echo $this->addlink;?>"]').on('click',function(e){
		if(!e.isDefaultPrevented()){
			if(window.imagesUploaded >= window.imagesLimit){
				 promptus = new prompt({
	                reference : self,
	                element : ".dataTables_wrapper"
	            });
	            promptus.showErrorMessage("You have reached maximum upload image limit of " +window.imagesLimit+ ".Please delete some wallpapers and try again");
	            setTimeout(function(){
            		promptus.close();
                }, 3000);
				e.preventDefault();
			}
		}
	});
	grid = dataTable({
		aaSorting: [[ 4, "asc" ]],
		"aoColumns": [
						{ "sName": "thumbnail" ,"bSortable": false},
						{ "sName": "hd.image_title" },
						{ "sName": "h.default" },
						{ "sName": "h.status" },
						{ "sName": "h.order" },
						{ "sName": "actions","bSortable": false}
					 ],
		id : $('#dataGrid'),
		filterForm : $('#frmFilter'),
		sAjaxSource: "<?php echo $this->url(array("module"=>"home-wallpaper","controller"=>"index","action"=>"grid"));?>"
	});
    $(document).on("submit","#frmFilter",function(){
    	grid.fnDraw();
    	return false;
    });
    
    $(document).on("click",".grid_delete",function(e){
        var self = this;
        window.currentDeleteUrl = $(this).attr("href"); 
        if(!e.isDefaultPrevented()){
        	var promptus = new prompt({
                    	reference : self,
                        element : ".dataTables_wrapper",
                        message : "<?php echo $this->translate('Are you sure you want to delete this Home Wallpaper?'); ?>",
                        buttons : {
                            "Yes" : function(self){
                                var prompt = this;
                                $(document).queue(function(next){
                                    prompt.showLoadingMessage("<?php echo $this->translate('Please wait while deleting home wallpaper..'); ?>");
                                    next();
                                }).queue(function(next){
                                    $.ajax({
                                        url: window.currentDeleteUrl,
                                        cache: false,
                                        type: "GET",
                                        dataType: "json",
                                        success: function(json){
                                            if(json.success != undefined){ 
                                            	prompt.showSuccessMessage("<?php echo $this->translate('Home Wallpaper deleted successfully.'); ?>");
                                            	window.imagesUploaded--;
                                            	setTimeout(function(){
                                            		prompt.close();
                                                	grid.fnDraw();
                                                }, 1000);
                                            } else if(json.errors != undefined){
                                                var errorMessage = "<?php echo $this->translate('Unable to delete home wallpaper:'); ?><br />";
                                                errorMessage += json.errors.message;
                                            	prompt.showErrorMessage(errorMessage);
                                            	setTimeout(function(){
                                            		prompt.close();
                                                }, 2000);
                                            }
                                        },
                                        error: function(){
                                        }
                                    }).complete(next); 
                                });
                            },
                            "No"  : function(self){
                            	this.close();
                            },
                        }
                    });
            e.preventDefault();
        }
    });

    $(document).on("click",".module_publish",function(e){
        var self = this;
        window.currentPublishUrl = $(this).attr("href"); 
        if(!e.isDefaultPrevented()){
        	var promptus = new prompt({
                    	reference : self,
                        element : ".dataTables_wrapper",
                        message : "<?php echo $this->translate('Are you sure you want to publish this Module?'); ?>",
                        buttons : {
                            "Yes" : function(self){
                                var prompt = this;
                                $(document).queue(function(next){
                                    prompt.showLoadingMessage("<?php echo $this->translate('Publishing Module..'); ?>");
                                    next();
                                }).queue(function(next){
                                    $.ajax({
                                        url: window.currentPublishUrl,
                                        cache: false,
                                        type: "GET",
                                        dataType: "json",
                                        success: function(json){
                                            if(json.success != undefined){ 
                                            	prompt.showSuccessMessage("<?php echo $this->translate('Module Published successfully.'); ?>");
                                            	setTimeout(function(){
                                            		prompt.close();
                                                	grid.fnDraw();
                                                }, 1000);
                                            } else if(json.errors != undefined){
                                                var errorMessage = "<?php echo $this->translate('Unable to publish Module:'); ?><br />";
                                                errorMessage += json.errors.message;
                                            	prompt.showErrorMessage(errorMessage);
                                            	setTimeout(function(){
                                            		prompt.close();
                                                }, 2000);
                                            }
                                        },
                                        error: function(){
                                        }
                                    }).complete(next); 
                                });
                            },
                            "No"  : function(self){
                            	this.close();
                            },
                        }
                    });
            e.preventDefault();
        }
    });
    
    $('.togglefilter').on("click",function(){
		$('#filterBox').toggle();
		$('#content > a').toggleClass('flip-vertical');
	});
	$('#filterBox').hide();
});
</script>