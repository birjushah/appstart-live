<?php 
$form = $this->form; 
$mode = $this->mode;
?>
<script type="text/javascript" src="<?php echo $this->baseUrl("libs/tinymce/js/tiny_mce.js"); ?>"></script>
<script type="text/javascript">
callTinymce('description1');
function callTinymce(id){
	if(id == undefined){
		tinyMCE.init({
			// General options
			mode : "textareas",
			theme : "advanced",
			//width : "150",
			// set value of textarea if null
			//onchange_callback : "textAreaValueChange",
		
			//plugins : "autolink,lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,visualblocks",
			plugins : "paste,pagebreak,table",
			// Theme options
			theme_advanced_buttons1 : "bold,italic,underline,strikethrough,|,undo,redo,|,bullist,numlist,|,outdent,indent,blockquote,|,forecolor,backcolor,|,tablecontrols,|,hr",
			//theme_advanced_buttons1 : "formatselect,fontselect,fontsizeselect,|,forecolor,backcolor,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,code",
			theme_advanced_buttons2 : "",
			//theme_advanced_buttons3 : "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,ltr,rtl",
			//theme_advanced_buttons4 : "insertlayer,moveforward,movebackward,absolute,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,pagebreak",
			theme_advanced_toolbar_location : "top",
			theme_advanced_toolbar_align : "left",
			theme_advanced_statusbar_location : "bottom",
			//theme_advanced_resizing : true,
			//theme_advanced_resizing_max_width : "500",
			//theme_advanced_source_editor_width : 320,	
			// Example content CSS (should be your site CSS)
			content_css : "<?php echo $this->baseUrl("libs/tinymce/css/content.css"); ?>",
			// Drop lists for link/image/media/template dialogs
			template_external_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/template_list.js"); ?>",
			external_link_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/link_list.js"); ?>",
			external_image_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/image_list.js"); ?>",
			media_external_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/media_list.js"); ?>",
		
			// Style formats
			style_formats : [
				{title : 'Bold text', inline : 'b'},
				{title : 'Red text', inline : 'span', styles : {color : '#ff0000'}},
				{title : 'Red header', block : 'h1', styles : {color : '#ff0000'}},
				{title : 'Example 1', inline : 'span', classes : 'example1'},
				{title : 'Example 2', inline : 'span', classes : 'example2'},
				{title : 'Table styles'},
				{title : 'Table row 1', selector : 'tr', classes : 'tablerow1'},
			],
			// Replace values for the template plugin
			template_replace_values : {
				username : "Some User",
				staffid : "991234"
			}
		});
	} else {
		tinyMCE.init({
			// General options
			mode : "exact",
			theme : "advanced",
			elements : ""+id,
			//width:"150",
			// set value of textarea if null
			//onchange_callback : "textAreaValueChange",
		
			//plugins : "autolink,lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,visualblocks",
			plugins : "paste,pagebreak,table",
			
			// Theme options
			theme_advanced_buttons1 : "bold,italic,underline,strikethrough,|,undo,redo,|,bullist,numlist,|,outdent,indent,blockquote,|,forecolor,backcolor,|,tablecontrols,|,hr",
			//theme_advanced_buttons1 : "formatselect,fontselect,fontsizeselect,|,forecolor,backcolor,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,code",
			theme_advanced_buttons2 : "",
			//theme_advanced_buttons3 : "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,ltr,rtl",
			//theme_advanced_buttons4 : "insertlayer,moveforward,movebackward,absolute,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,pagebreak",
			theme_advanced_toolbar_location : "top",
			theme_advanced_toolbar_align : "left",
			theme_advanced_statusbar_location : "bottom",
			theme_advanced_resizing : true,
			//theme_advanced_resizing_max_width : "500",
			//theme_advanced_source_editor_width : 320,	
			
			// Example content CSS (should be your site CSS)
			content_css : "<?php echo $this->baseUrl("libs/tinymce/css/content.css"); ?>",
		
			// Drop lists for link/image/media/template dialogs
			template_external_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/template_list.js"); ?>",
			external_link_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/link_list.js"); ?>",
			external_image_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/image_list.js"); ?>",
			media_external_list_url : "<?php echo $this->baseUrl("libs/tinymce/js/lists/media_list.js"); ?>",
			// Style formats
			style_formats : [
				{title : 'Bold text', inline : 'b'},
				{title : 'Red text', inline : 'span', styles : {color : '#ff0000'}},
				{title : 'Red header', block : 'h1', styles : {color : '#ff0000'}},
				{title : 'Example 1', inline : 'span', classes : 'example1'},
				{title : 'Example 2', inline : 'span', classes : 'example2'},
				{title : 'Table styles'},
				{title : 'Table row 1', selector : 'tr', classes : 'tablerow1'}
			],
			// Replace values for the template plugin
			template_replace_values : {
				username : "Some User",
				staffid : "991234"
			}
		});
	}
	return true;
}
</script>
<link rel="StyleSheet"
	href="<?php echo $this->baseUrl("libs/tagit/css/jquery.tagedit.css"); ?>"
	type="text/css" media="all" />
<script type="text/javascript"
	src="<?php echo $this->baseUrl("libs/tagit/js/jquery.autoGrowInput.js"); ?>"></script>
<script type="text/javascript"
	src="<?php echo $this->baseUrl("libs/tagit/js/jquery.tagedit.js"); ?>"></script>
<script type="text/javascript"
	src="<?php echo $this->baseUrl("libs/tagit/js/jquery-ui-1.8.6.custom.min.js"); ?>"></script>
<div id="filterBox">
	<table
		style="width: 100%; border: 0; border-spacing: 0; border-collapse: collapse;">
		<tr>
			<td valign="middle"><?php echo $this->partial($this->partial,array()); ?></td>
			<td align="right"><h2><?php echo $this->language; ?></h2></td>
		</tr>
	</table>
</div>
<div class="boxBorderBottom">
	<form id="frmAddEditimageGallery"
		method="<?php echo $form->getMethod();?>"
		action="<?php echo $form->getAction();?>" class="zend_form">
	<table style="margin: 10px 0;" class="clonedInput" id="input1">
			<tbody>
				<tr>
					<td>
					<?php  echo $form->tag->renderViewHelper();?>	
				<?php  echo $form->module_image_gallery_id->renderViewHelper();?>
				<?php  echo $form->language_id->renderViewHelper();?>
				<?php  echo $form->module_image_gallery_detail_id->renderViewHelper();?>
					<?php echo $form->module_image_gallery_category_id->renderLabel() ?></td>
					<td>
		        	<?php echo $form->module_image_gallery_category_id->renderViewHelper()?>
					</td>
				</tr>
				<tr>
					<td><?php echo $form->title->renderLabel() ?></td>
					<td>
		        	<?php echo $form->title->renderViewHelper()?>
					</td>
				</tr>

				<tr>
					<td><label for="image"><?php echo $this->translate('Image'); ?></label></td>
					<td><?php echo $form->image->renderFile();?></td>
					<td><input name="data[1][image_path]" type="hidden" id="image_path1" /></td>
					<td><img src="<?php echo $this->image_thumb?>" height=100 width=100></td>
				</tr>

				<tr>
					<td class="image-label"><?php echo $form->description->renderLabel() ?></td>
					<td>
		        	<?php echo $form->description->renderViewHelper()?>
					</td>
				</tr>

				<tr>
					<td><?php echo $form->status->renderLabel() ?></td>
					<td>
		        	<?php echo $form->status->renderViewHelper()?>
					</td>
				</tr>

				<tr>
					<td><label>Keywords</label></td>
					<td>
						<?php
						if (is_array ( $this->keywords )) {
							foreach ( $this->keywords as $keyword ) {
								?>
									<input type="text" name="data[1][arrtag][]"
							value="<?php echo $keyword;?>" class="tag" id="keywords" />
								<?php
							}
						} else {
							?>
							<input type="text" name="data[1][arrtag][]" value=""
							class="tag" id="keywords" />
						<?php
						}
						?>
					</td>
				</tr>
				<tr>
					<td colspan="3" align="center">
			        	<?php echo $form->submit->renderViewHelper() ?>&nbsp;
			        	<?php echo $form->applyall->renderViewHelper()?>&nbsp;
						<?php echo $form->reset->renderViewHelper()?>
					</td>
			</tr>
			</tbody>
		</table>
	</form>
</div>
<script type="text/javascript">
$("#applyall").on("click",function(e){
	if(!e.isDefaultPrevented()){
    	var promptus = new prompt({
            	reference :"#frmAddEditimageGallery",
                element : "#content",
                message : "<?php echo $this->translate('Your changes will be saved and applied to all languages. Is it Ok?'); ?>",
                buttons : {
                    "Yes" : function(self){
                        $("#frmAddEditimageGallery").trigger("submit",{all:true});
                    },
                    "No"  : function(self){
                    	this.close();
                    },
                }
            });
        e.preventDefault();
    }
});
function submitForm(e,customObject){
	customObject = customObject || {};
	var queryAppend = "";
	if(customObject.all){
		queryAppend = "&all=true";
	}
	var form = $("#frmAddEditimageGallery");
	if(!e.isDefaultPrevented()){
		var promptus = false;
		$(document).queue(function(next){
			promptus = new prompt({
            	reference : form,
                element : "#content",
                beforeShow : function(){
	                this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Image..')?>");
                }
            });
            next();
		}).queue(function(next){
			var imageElements = $("input[type=file][id^=image]");
			var totalImageElements = imageElements.length;
			var initialization = 0;
			var proceed = true;
			imageElements.each(function(key,value){
				if($(this).attr("value")!="") {
					proceed = false;
					var newKey = new Number(key+1);
					$.ajaxFileUpload({	
						url:'<?php echo $form->getAction(); ?>',
						secureuri:false,
						fileElementId:$(this).attr("id"),
						dataType: 'json',
						async : false,
						data:{upload:'true',image_name: $(this).attr("name")},
						success: function (data, status) {
							if(data.success != undefined) {
								$("#image_path"+newKey).attr("value",data.success);
							}
						},
						error: function (data, status, e) {
							promptus.showErrorMessage("<?php echo $this->translate('Error uploading Image.')?>");
							setTimeout(function(){
								promptus.close();
							}, 2000);
							return false;
						},
						complete: function(){
							initialization++;
							if(initialization == totalImageElements) {
								proceed = true;
								next();
							}
						}
					});
				}
			});
			if(proceed){
				next();
			}
		}).queue(function(next){
			$.ajax({
				type : "POST",
				cache : false,
				data : form.serialize()+ queryAppend,
				url : "<?php echo $form->getAction(); ?>",
				success : function(json){
					if(json["errors"] != undefined){
						form.data("validator").invalidate(json["errors"]);
						next();
					} else if(json["success"] != undefined){
						promptus.showSuccessMessage("<?php echo $this->translate('Image saved successfully.')?>");
						setTimeout(function(){
							location.href = "<?php echo $this->url(array("module"=>"module-image-gallery","controller"=>"index","action" => "index"),"default",true);?>";
						}, 2000);
					}
				},
				error : next
  			});
		}).queue(function(next){
			promptus.close();
			next();
  		});
		e.preventDefault();
	}
}
$(document).ready(function() {
	$("#frmAddEditimageGallery").validator().submit(function(e,customObject){	
		submitForm(e,customObject);
		});
	
	function initTag(){
	$(function() {
		$( "#frmAddEditimageGallery" ).find('input.tag').tagedit({
				//autocompleteURL: 'server/autocomplete.php'
		});
	});
}
initTag();
// Procedure to be carried out when creating new Image File Form
$('#btnAdd').click(function() {
	// Get the length of total images form
    var num     = $('.clonedInput').length;
    var newNum  = new Number(num + 1);
    // Create default prefix for the new elements created
    var newNamePrefix = "data[" + newNum + "]";

    // Create new text area as the mce editor does not supports clone currently
    var elem = document.createElement("textarea");
    $(elem).attr("id", "description" + newNum ).attr("name",newNamePrefix + '[description]');

    // Clone the standard table created previously with zend form
    var newElem = $('#input1').clone().attr('id', 'input' + newNum);
    
    // Setting name for module_image_gallery_id
    newElem.find("input[id^=module_image_gallery_id]").attr('id', 'module_image_gallery_id' + newNum).attr('name', newNamePrefix + '[module_image_gallery_id]');

    // Setting name for language_id
    newElem.find("input[id^=language_id]").attr('id', 'language_id' + newNum).attr('name', newNamePrefix + '[language_id]');

    // Setting name for image_gallery_detail_id
    newElem.find("input[id^=module_image_gallery_detail_id]").attr('id', 'module_image_gallery_detail_id' + newNum).attr('name', newNamePrefix + '[module_image_gallery_detail_id]');

    // Setting name for tag
    newElem.find("input[id^=tag]").attr('id', 'tag' + newNum).attr('name', newNamePrefix + '[tag]');

    // Setting name for module_image_gallery_category_id
    newElem.find("select[id^=module_image_gallery_category_id]").attr('id', 'module_image_gallery_category_id' + newNum).attr('name', newNamePrefix + '[module_image_gallery_category_id]');

    // Setting name for title
    newElem.find("input[id^=title]").attr('id', 'title' + newNum).attr('name', newNamePrefix + '[title]');
    
    // Setting name for status
    newElem.find("input[name*=status]").attr('name', newNamePrefix + '[status]');
    newElem.find("input[id^=status]").attr('id', 'status' + newNum);

    // Setting name for image_path
    newElem.find("input[id^=image_path]").attr('id', 'image_path' + newNum).attr('name', newNamePrefix + '[image_path]');

    // Setting name for image file upload
    newElem.find("input[id^=image][type=file]").attr('id', 'image' + newNum).attr('name', 'image' + newNum);

    // Setting name for image arr tags
    var newArr = newElem.find('.tagedit-list').html();
    newElem.find('.tagedit-list').parent().html(newArr);
    newElem.find("input[name*=tag]").attr('id', 'keywords' + newNum).attr('class', 'tag').attr('value','').attr('name', newNamePrefix + '[arrtag][]');

    // Remove improperly cloned textarea by mce
    
    newElem.find(".mceEditor").remove();
    
    //newElem.find("input[name^=arrtag]").attr('id', 'keywords' + newNum).attr('class', 'tag').attr('value','').attr('name', 'arrtag['+ newNum +'][]');    
	newElem.find(".tagedit-listelement-old").remove();

	// Appending the clone
    $('#input' + num).after(newElem);
    
    $(newElem).find('.image-label').after(elem);
    
    // Initialize tinymce again
    callTinymce(newElem.find("textarea[id^=description]").attr('id'));

    // Init tags
    initTag();
    $("#frmAddEditimageGallery").validator().submit(function(e){	
		submitForm();
	});
    $('#btnDel').removeAttr('disabled');
    
    if (newNum == 5)
        $('#btnAdd').attr('disabled','disabled');
});

$('#btnDel').click(function() {
	$('.error').remove();
    var num = $('.clonedInput').length;
    $('#input' + num).remove();
    $('#btnAdd').removeAttr('disabled','');

    $("#frmAddEditimageGallery").validator().submit(function(e){	
		submitForm();
	});
    if (num-1 == 1)
        $('#btnDel').attr('disabled','disabled');
});

$('#btnDel').attr('disabled','disabled');

});
</script>